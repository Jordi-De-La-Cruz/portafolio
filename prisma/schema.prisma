generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de usuario
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// Información personal
model PersonalInfo {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String
  title       String
  description String   @db.Text
  // Links opcionales
  location    String?
  github      String?
  linkedIn    String?
  website     String?
  resumeUrl   String?
  avatarUrl   String?
  updatedAt   DateTime @updatedAt

  @@map("personal_info")
}

// Proyectos
model Project {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  // URLs relacionadas
  imageUrl    String?
  demoUrl     String?
  githubUrl   String?
  technologies String
  featured    Boolean  @default(false)
  category    String   @default("WEB")
  // Fechas
  startDate   DateTime
  endDate     DateTime?
  status      String   @default("COMPLETED")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

// Experiencia laboral
model Experience {
  id           String   @id @default(cuid())
  company      String
  position     String
  description  String   @db.Text
  startDate    DateTime
  endDate      DateTime?
  current      Boolean  @default(false)
  featured     Boolean  @default(false)
  location     String?
  achievements String[]
  skills       String[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("experiences")
}

// Educación
model Education {
  id          String   @id @default(cuid())
  institution String
  degree      String
  field       String?
  startDate   DateTime
  endDate     DateTime?
  current     Boolean  @default(false)
  description String?
  gpa         String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("education")
}

// Habilidades técnicas
model Skill {
  id          String   @id @default(cuid())
  name        String
  category    String
  level       String
  description String?
  icon        String?
  featured    Boolean  @default(false)
  yearsExp    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("skills")
}

// Certificaciones
model Certification {
  id          String   @id @default(cuid())
  name        String
  issuer      String
  issueDate   DateTime
  expiryDate  DateTime?
  credentialId String?
  url         String?
  description String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("certifications")
}

// Mensajes de contacto
model Contact {
  id          String   @id @default(cuid())
  name        String
  email       String
  subject     String?
  message     String   @db.Text
  status      String   @default("UNREAD")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contacts")
}

// Analytics de visitas
model Analytics {
  id          String   @id @default(cuid())
  page        String
  visits      Int      @default(0)
  uniqueViews Int      @default(0)
  date        DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("analytics")
}
